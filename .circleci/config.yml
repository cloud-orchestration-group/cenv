version: 2

volumes: &volumes
    name: Ensuring application volumes
    command: |
        mkdir -p ./data
        mkdir -p ./lib

jobs:
    test-commands:
        machine: true
        steps:
            - checkout
            - run: *volumes
            - run:
                name: Run command tests
                command: ./build/test/command.sh

    test-api:
        machine: true
        steps:
            - checkout
            - run: *volumes
            - run:
                name: Run API tests
                command: ./build/test/api.sh

    deploy-docker-latest:
        machine: true
        steps:
            - checkout
            - run: *volumes
            - run:
                name: Deploy latest Docker image
                command: ./build/docker/deploy_latest.sh

    deploy-docker-version:
        machine: true
        steps:
            - checkout
            - run: *volumes
            - run:
                name: Deploy versioned Docker image
                command: ./build/docker/deploy_version.sh

    deploy-pip:
        docker:
            - image: python:3.9
        steps:
            - checkout
            - run:
                name: Copy package version
                command: cp -f ./app/VERSION ./package/VERSION

            - run:
                name: Deploy Pip package
                command: ./package/deploy.sh

    deploy-docs:
        docker:
            - image: python:3.9
        steps:
            - run:
                name: Install core dependencies
                command: |
                    apt-get update
                    apt-get install -y git g++ gcc make

            - checkout
            - run:
                name: Install documentation dependencies
                command: pip install --no-cache-dir -r ./docs/requirements.txt

            - run:
                name: Deploy documentation
                command: |
                    git config --global user.name "CircleCI ( ${CIRCLE_USERNAME} )"
                    git config --global user.email "${CIRCLE_USERNAME}@${CIRCLE_BRANCH}"
                    ./build/docs.sh git@github.com:zimagi/zimagi.git "${CIRCLE_BRANCH}"

    update-helm-chart:
        docker:
            - image: python:3.9
        steps:
            - run:
                name: Install core dependencies
                command: |
                    apt-get update
                    apt-get install -y git

            - checkout
            - run:
                name: Update Zimagi helm chart version
                command: |
                    git config --global user.name "CircleCI ( ${CIRCLE_USERNAME} )"
                    git config --global user.email "${CIRCLE_USERNAME}@${CIRCLE_BRANCH}"
                    ./build/helm.sh git@github.com:zimagi/charts.git master

workflows:
    version: 2
    deploy:
        jobs:
            - test-commands:
            - test-api:
            - deploy-docker-latest:
                filters:
                    tags:
                        ignore: /.*/
                    branches:
                        only: main
                requires:
                    - test-commands
                    - test-api
            - deploy-docker-version:
                filters:
                    tags:
                        only: /^.*/
                    branches:
                        ignore: /.*/
                requires:
                    - test-commands
                    - test-api
            - deploy-pip:
                filters:
                    tags:
                        only: /^.*/
                    branches:
                        ignore: /.*/
                requires:
                    - test-commands
                    - test-api
            - deploy-docs:
                filters:
                    branches:
                        only:
                            - main
                            - docs
            - update-helm-chart:
                filters:
                    tags:
                        only: /^.*/
                    branches:
                        ignore: /.*/
                requires:
                    - deploy-docker-version