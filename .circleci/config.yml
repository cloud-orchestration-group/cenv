version: 2

volumes: &volumes
    name: Ensuring application volumes
    command: |
        mkdir -p ./data
        mkdir -p ./lib

jobs:
    test-local-cli-commands:
        machine:
            image: ubuntu-2204:current
        steps:
            - checkout
            - run: *volumes
            - run:
                name: Initialize local CLI environment (standard)
                command: ./reactor init
            - run:
                name: Run local CLI command tests (standard)
                command: ./reactor test command_local
                environment:
                    ZIMAGI_QUEUE_COMMANDS: False
                    ZIMAGI_STARTUP_SERVICES: '[]'

    test-local-worker-commands:
        machine:
            image: ubuntu-2204:current
        steps:
            - checkout
            - run: *volumes
            - run:
                name: Initialize local worker environment (standard)
                command: ./reactor init
            - run:
                name: Run local worker command tests (standard)
                command: ./reactor test command_local
                environment:
                    ZIMAGI_QUEUE_COMMANDS: True
                    ZIMAGI_STARTUP_SERVICES: '["scheduler", "worker"]'
            - run:
                name: Scheduler log entries
                when: always
                command: ./zimagi service logs scheduler --tail=500
            - run:
                name: Worker log entries
                when: always
                command: ./zimagi service logs worker --tail=500

    test-remote-api-commands:
        machine:
            image: ubuntu-2204:current
        steps:
            - checkout
            - run: *volumes
            - run:
                name: Initialize remote API environment (standard)
                command: ./reactor init
            - run:
                name: Run remote API command tests (standard)
                command: ./reactor test command_remote
                environment:
                    ZIMAGI_QUEUE_COMMANDS: False
                    ZIMAGI_STARTUP_SERVICES: '["scheduler", "command-api"]'
                    ZIMAGI_ENCRYPT_COMMAND_API: False
            - run:
                name: Scheduler log entries
                when: always
                command: ./zimagi service logs scheduler --tail=500
            - run:
                name: Command API log entries
                when: always
                command: ./zimagi service logs command-api --tail=500

    test-remote-api-encrypted-commands:
        machine:
            image: ubuntu-2204:current
        steps:
            - checkout
            - run: *volumes
            - run:
                name: Initialize remote API encrypted environment (standard)
                command: ./reactor init
            - run:
                name: Run remote API encrypted command tests (standard)
                command: ./reactor test command_remote
                environment:
                    ZIMAGI_QUEUE_COMMANDS: False
                    ZIMAGI_STARTUP_SERVICES: '["scheduler", "command-api"]'
                    ZIMAGI_ENCRYPT_COMMAND_API: True
            - run:
                name: Scheduler log entries
                when: always
                command: ./zimagi service logs scheduler --tail=500
            - run:
                name: Command API log entries
                when: always
                command: ./zimagi service logs command-api --tail=500

    test-remote-worker-commands:
        machine:
            image: ubuntu-2204:current
        steps:
            - checkout
            - run: *volumes
            - run:
                name: Initialize remote worker environment (standard)
                command: ./reactor init
            - run:
                name: Run remote worker command tests (standard)
                command: ./reactor test command_remote
                environment:
                    ZIMAGI_QUEUE_COMMANDS: True
                    ZIMAGI_STARTUP_SERVICES: '["scheduler", "worker", "command-api"]'
                    ZIMAGI_ENCRYPT_COMMAND_API: False
            - run:
                name: Scheduler log entries
                when: always
                command: ./zimagi service logs scheduler --tail=500
            - run:
                name: Worker log entries
                when: always
                command: ./zimagi service logs worker --tail=500
            - run:
                name: Command API log entries
                when: always
                command: ./zimagi service logs command-api --tail=500

    test-remote-worker-encrypted-commands:
        machine:
            image: ubuntu-2204:current
        steps:
            - checkout
            - run: *volumes
            - run:
                name: Initialize remote worker encrypted environment (standard)
                command: ./reactor init
            - run:
                name: Run remote worker encrypted command tests (standard)
                command: ./reactor test command_remote
                environment:
                    ZIMAGI_QUEUE_COMMANDS: True
                    ZIMAGI_STARTUP_SERVICES: '["scheduler", "worker", "command-api"]'
                    ZIMAGI_ENCRYPT_COMMAND_API: True
            - run:
                name: Scheduler log entries
                when: always
                command: ./zimagi service logs scheduler --tail=500
            - run:
                name: Worker log entries
                when: always
                command: ./zimagi service logs worker --tail=500
            - run:
                name: Command API log entries
                when: always
                command: ./zimagi service logs command-api --tail=500

    test-python-sdk:
        machine:
            image: ubuntu-2204:current
        steps:
            - checkout
            - run: *volumes
            - run:
                name: Initialize API Python SDK environment (standard)
                command: ./reactor init
            - run:
                name: Run API Python SDK tests (standard)
                command: ./reactor test python_sdk
                environment:
                    ZIMAGI_QUEUE_COMMANDS: True
                    ZIMAGI_STARTUP_SERVICES: '["scheduler", "worker", "command-api", "data-api"]'
                    ZIMAGI_ENCRYPT_COMMAND_API: False
                    ZIMAGI_ENCRYPT_DATA_API: False
            - run:
                name: Scheduler log entries
                when: always
                command: ./zimagi service logs scheduler --tail=500
            - run:
                name: Worker log entries
                when: always
                command: ./zimagi service logs worker --tail=500
            - run:
                name: Command API log entries
                when: always
                command: ./zimagi service logs command-api --tail=500
            - run:
                name: Data API log entries
                when: always
                command: ./zimagi service logs data-api --tail=500

    test-python-encrypted-sdk:
        machine:
            image: ubuntu-2204:current
        steps:
            - checkout
            - run: *volumes
            - run:
                name: Initialize API Python encrypted SDK environment (standard)
                command: ./reactor init
            - run:
                name: Run API Python encrypted SDK tests (standard)
                command: ./reactor test python_sdk
                environment:
                    ZIMAGI_QUEUE_COMMANDS: True
                    ZIMAGI_STARTUP_SERVICES: '["scheduler", "worker", "command-api", "data-api"]'
                    ZIMAGI_ENCRYPT_COMMAND_API: True
                    ZIMAGI_ENCRYPT_DATA_API: True
            - run:
                name: Scheduler log entries
                when: always
                command: ./zimagi service logs scheduler --tail=500
            - run:
                name: Worker log entries
                when: always
                command: ./zimagi service logs worker --tail=500
            - run:
                name: Command API log entries
                when: always
                command: ./zimagi service logs command-api --tail=500
            - run:
                name: Data API log entries
                when: always
                command: ./zimagi service logs data-api --tail=500

    deploy-docker-latest:
        machine:
            image: ubuntu-2204:current
        steps:
            - checkout
            - run: *volumes
            - run:
                name: Deploy latest Docker image
                command: ./docker/deploy.sh standard latest

    deploy-docker-nvidia-latest:
        machine:
            image: ubuntu-2204:current
        steps:
            - checkout
            - run: *volumes
            - run:
                name: Deploy latest Nvidia Docker image
                command: ./docker/deploy.sh nvidia latest

    deploy-docker-version:
        machine:
            image: ubuntu-2204:current
        steps:
            - checkout
            - run: *volumes
            - run:
                name: Deploy versioned Docker image
                command: ./docker/deploy.sh

    deploy-docker-nvidia-version:
        machine:
            image: ubuntu-2204:current
        steps:
            - checkout
            - run: *volumes
            - run:
                name: Deploy versioned Docker image
                command: ./docker/deploy.sh nvidia

    deploy-pip:
        docker:
            - image: python:3.10
        steps:
            - checkout
            - run:
                name: Copy package version
                command: cp -f ./app/VERSION ./package/VERSION

            - run:
                name: Deploy Pip package
                command: ./package/deploy.sh

    deploy-docs:
        docker:
            - image: python:3.10
        steps:
            - run:
                name: Install core dependencies
                command: |
                    apt-get update
                    apt-get install -y git g++ gcc make

            - checkout
            - run:
                name: Install documentation dependencies
                command: pip install --no-cache-dir -r ./docs/requirements.txt

            - run:
                name: Deploy documentation
                command: |
                    git config --global user.name "CircleCI ( ${CIRCLE_USERNAME} )"
                    git config --global user.email "${CIRCLE_USERNAME}@${CIRCLE_BRANCH}"
                    ./docs/deploy.sh git@github.com:zimagi/zimagi.git "${CIRCLE_BRANCH}"

    update-helm-chart:
        docker:
            - image: python:3.10
        steps:
            - run:
                name: Install core dependencies
                command: |
                    apt-get update
                    apt-get install -y git

            - checkout
            - run:
                name: Update Zimagi helm chart version
                command: |
                    git config --global user.name "CircleCI ( ${CIRCLE_USERNAME} )"
                    git config --global user.email "${CIRCLE_USERNAME}@${CIRCLE_BRANCH}"
                    ./app/deploy.sh git@github.com:zimagi/charts.git master

workflows:
    version: 2
    deploy:
        jobs:
            - test-local-cli-commands:
                filters:
                    tags:
                        only: /.*/
            - test-local-worker-commands:
                filters:
                    tags:
                        only: /.*/

            - test-remote-api-commands:
                filters:
                    tags:
                        only: /.*/
            - test-remote-api-encrypted-commands:
                filters:
                    tags:
                        only: /.*/
            - test-remote-worker-commands:
                filters:
                    tags:
                        only: /.*/
            - test-remote-worker-encrypted-commands:
                filters:
                    tags:
                        only: /.*/

            - test-python-sdk:
                filters:
                    tags:
                        only: /.*/
            - test-python-encrypted-sdk:
                filters:
                    tags:
                        only: /.*/

            - deploy-docker-latest:
                filters:
                    tags:
                        ignore: /.*/
                    branches:
                        only: main
                requires:
                    - test-local-cli-commands
                    - test-local-worker-commands
                    - test-remote-api-commands
                    - test-remote-api-encrypted-commands
                    - test-remote-worker-commands
                    - test-remote-worker-encrypted-commands
                    - test-python-sdk
                    - test-python-encrypted-sdk
            - deploy-docker-nvidia-latest:
                filters:
                    tags:
                        ignore: /.*/
                    branches:
                        only: main
                requires:
                    - test-local-cli-commands
                    - test-local-worker-commands
                    - test-remote-api-commands
                    - test-remote-api-encrypted-commands
                    - test-remote-worker-commands
                    - test-remote-worker-encrypted-commands
                    - test-python-sdk
                    - test-python-encrypted-sdk

            - deploy-docker-version:
                filters:
                    tags:
                        only: /.*/
                    branches:
                        ignore: /.*/
                requires:
                    - test-local-cli-commands
                    - test-local-worker-commands
                    - test-remote-api-commands
                    - test-remote-api-encrypted-commands
                    - test-remote-worker-commands
                    - test-remote-worker-encrypted-commands
                    - test-python-sdk
                    - test-python-encrypted-sdk
            - deploy-docker-nvidia-version:
                filters:
                    tags:
                        only: /.*/
                    branches:
                        ignore: /.*/
                requires:
                    - test-local-cli-commands
                    - test-local-worker-commands
                    - test-remote-api-commands
                    - test-remote-api-encrypted-commands
                    - test-remote-worker-commands
                    - test-remote-worker-encrypted-commands
                    - test-python-sdk
                    - test-python-encrypted-sdk

            - deploy-pip:
                filters:
                    tags:
                        only: /.*/
                    branches:
                        ignore: /.*/
                requires:
                    - test-local-cli-commands
                    - test-local-worker-commands
                    - test-remote-api-commands
                    - test-remote-api-encrypted-commands
                    - test-remote-worker-commands
                    - test-remote-worker-encrypted-commands
                    - test-python-sdk
                    - test-python-encrypted-sdk

            - deploy-docs:
                filters:
                    branches:
                        only:
                            - main
                            - docs

            - update-helm-chart:
                filters:
                    tags:
                        only: /.*/
                    branches:
                        ignore: /.*/
                requires:
                    - deploy-docker-version
                    - deploy-docker-nvidia-version
