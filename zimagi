#!/usr/bin/env bash
#-------------------------------------------------------------------------------
set -e

SCRIPT_DIR="$(cd "$(dirname "$([ `readlink "$0"` ] && echo "`readlink "$0"`" || echo "$0")")"; pwd -P)"
cd "$SCRIPT_DIR"
#
# Initialize Docker runtime settings
#
DOCKER_RUNTIME=docker
DEFAULT_DOCKER_TAG=dev

if which nvidia-docker >/dev/null 2>&1
then
    DOCKER_RUNTIME=nvidia-docker
    DEFAULT_DOCKER_TAG="nvidia-${DEFAULT_DOCKER_TAG}"
    export ZIMAGI_DOCKER_RUNTIME=nvidia
fi

export ZIMAGI_DEFAULT_RUNTIME_REPO="${ZIMAGI_DEFAULT_RUNTIME_REPO:-registry.hub.docker.com}"
export ZIMAGI_DEFAULT_RUNTIME_IMAGE="${ZIMAGI_DEFAULT_RUNTIME_IMAGE:-zimagi/zimagi:$DEFAULT_DOCKER_TAG}"
#
# Initialize Zimagi directories and default configurations
#
export ZIMAGI_HOST_APP_DIR="${SCRIPT_DIR}/app"
export ZIMAGI_HOST_DATA_DIR="${SCRIPT_DIR}/data"
export ZIMAGI_HOST_LIB_DIR="${SCRIPT_DIR}/lib"
#
# Initialize Zimagi Docker runtime image
#
if [ -f data/zimagi.env ]
then
    source data/zimagi.env

    if [ -z "$ZIMAGI_RUNTIME_IMAGE" ]
    then
        ZIMAGI_RUNTIME_IMAGE="$ZIMAGI_BASE_IMAGE"
    fi
else
    ZIMAGI_REPO="$ZIMAGI_DEFAULT_RUNTIME_REPO"
    ZIMAGI_RUNTIME_IMAGE="$ZIMAGI_DEFAULT_RUNTIME_IMAGE"
fi

if ! docker inspect "$ZIMAGI_RUNTIME_IMAGE" >/dev/null 2>&1
then
    rm -f data/zimagi.env
    ZIMAGI_RUNTIME_IMAGE="$ZIMAGI_DEFAULT_RUNTIME_IMAGE"
fi
export ZIMAGI_RUNTIME_IMAGE
#
# Run Zimagi command
#
$DOCKER_RUNTIME run --rm --interactive --tty \
    --env "ZIMAGI_CLI_EXEC=True" \
    --env-file .env \
    --env-file <(env | grep "ZIMAGI_") \
    --network host \
    --volume /var/run/docker.sock:/var/run/docker.sock \
    --volume "${ZIMAGI_HOST_APP_DIR}:/usr/local/share/zimagi" \
    --volume "${ZIMAGI_HOST_DATA_DIR}:/var/local/zimagi" \
    --volume "${ZIMAGI_HOST_LIB_DIR}:/usr/local/lib/zimagi" \
    "$ZIMAGI_RUNTIME_IMAGE" "${@}"
