#!/usr/bin/env bash
#-------------------------------------------------------------------------------
set -e

SCRIPT_DIR="$(cd "$(dirname "$([ `readlink "$0"` ] && echo "`readlink "$0"`" || echo "$0")")"; pwd -P)"
DOCKER_FILE="${1}"
DOCKER_TAG="${2:-dev}"
#-------------------------------------------------------------------------------
echo "Ensuring project directories"
cd "$SCRIPT_DIR"

mkdir -p lib
mkdir -p data
rm -f data/zimagi.env

echo "Initializing configuration"
if [[ -z "$DOCKER_FILE" || "$DOCKER_FILE" == "standard" ]]
then
    if [ "$DOCKER_FILE" == "standard" ]
    then
        DOCKER_TAG="${DOCKER_FILE}-${DOCKER_TAG}"
    fi
    DOCKER_FILE="Dockerfile"
else
    if [ "$DOCKER_FILE" == "nvidia" ]
    then
        export ZIMAGI_DOCKER_RUNTIME=nvidia
    fi
    DOCKER_TAG="${DOCKER_FILE}-${DOCKER_TAG}"
    DOCKER_FILE="Dockerfile.${DOCKER_FILE}"
fi
export ZIMAGI_DEFAULT_RUNTIME_IMAGE="zimagi/zimagi:${DOCKER_TAG}"

if [ ! -f .env ]
then
    cat > .env <<END
ZIMAGI_LOG_LEVEL=warning
ZIMAGI_SECRET_KEY=XXXXXX20181105
ZIMAGI_POSTGRES_DB=zimagi_db
ZIMAGI_POSTGRES_USER=zimagi_db_user
ZIMAGI_POSTGRES_PASSWORD=A1B3C5D7E9F10
ZIMAGI_REDIS_PASSWORD=A1B3C5D7E9F10
END
    env | grep "ZIMAGI_" >> .env || true
fi

echo "Ensuring certificates"
if [ ! -d certs ];
then
    ./scripts/fetch-certs.sh certs
fi
echo "Setting certificate environment"
export ZIMAGI_CA_KEY="$(cat certs/zimagi-ca.key)"
export ZIMAGI_CA_CERT="$(cat certs/zimagi-ca.crt)"
export ZIMAGI_KEY="$(cat certs/zimagi.key)"
export ZIMAGI_CERT="$(cat certs/zimagi.crt)"

echo "Setting encyption keys"
if [ -z "$ZIMAGI_DATA_KEY" ];
then
    export ZIMAGI_DATA_KEY="$(cat certs/zimagi.crt)"
fi

echo "Package setup"
cp -f app/VERSION package/VERSION

echo "Building application"
find . -name *.pyc -exec rm -f {} \;

if [ -d data/run ]
then
    find data/run -type f -exec rm -f {} \;
fi
docker build --force-rm --no-cache \
    --file "docker/${DOCKER_FILE}" \
    --tag "$ZIMAGI_DEFAULT_RUNTIME_IMAGE" \
    --build-arg ZIMAGI_CA_KEY \
    --build-arg ZIMAGI_CA_CERT \
    --build-arg ZIMAGI_KEY \
    --build-arg ZIMAGI_CERT \
    --build-arg ZIMAGI_DATA_KEY \
    .

echo "Saving Docker configuration"
cat > .docker <<END
export ZIMAGI_DOCKER_RUNTIME="${ZIMAGI_DOCKER_RUNTIME}"
export ZIMAGI_DEFAULT_RUNTIME_IMAGE="${ZIMAGI_DEFAULT_RUNTIME_IMAGE}"
export ZIMAGI_CA_KEY="${ZIMAGI_CA_KEY}"
export ZIMAGI_CA_CERT="${ZIMAGI_CA_CERT}"
export ZIMAGI_KEY="${ZIMAGI_KEY}"
export ZIMAGI_CERT="${ZIMAGI_CERT}"
export ZIMAGI_DATA_KEY="${ZIMAGI_DATA_KEY}"
END
